[1,["1f19N5PHhLkYZXhv5+3qw1","a6wvU+zZxOrqEdw9BNI0LQ","8eDXQJiMFIoKC6PzMYWTmV","11VVTI9VRM15LhfCYDmB3A"],["node","_spriteFrame","_effectAsset","root","containerProp","data"],[["cc.Node",["_name","_groupIndex","_active","_prefab","_components","_parent","_contentSize","_children"],0,4,9,1,5,2],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.Sprite",["_sizeMode","_srcBlendFactor","_dstBlendFactor","node","_materials","_spriteFrame"],0,1,3,6],["cc.Material",["_name","_techniqueData"],2,11],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Prefab",["_name"],2],["68e7d2XTalCSatSNd/Dgbdy",["node","containerProp"],3,1,1]],[[1,0,1,2,2],[3,0,1,2],[4,0,1,2,4],[5,0,2],[0,0,1,7,4,3,3],[0,0,2,5,4,3,6,3],[0,0,5,3,2],[0,0,1,5,4,3,6,3],[6,0,1,1],[1,1,2,1],[2,0,3,4,5,2],[2,1,2,0,3,4,5,4]],[[[[1,"eff_alchemy_mat",[{},"0",11,[{"defines":{}},"props",11,[{},"colorOuter",8,[4,4278255579],"colorInner",8,[4,4278231620]]]]]],0,0,[0],[2],[1]],[[[2,"eff_alchemy",[{"hash":591093980,"record":null,"name":"eff_alchemy|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nuniform eff_alchemy {\n  vec4 colorInner;\n  vec4 colorOuter;\n};\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform eff_alchemy {\n  vec4 colorInner;\n  vec4 colorOuter;\n};\nvoid main () {\n  vec2 vecRel = v_uv0 - vec2 (0.5, 0.5);\n  float distance = sqrt (dot (vecRel, vecRel));\n  float rate = clamp (1.0 - (distance / 0.5), 0.0, 1.0);\n  vec4 colorTex = texture (texture, v_uv0);\n  float opacityForRadius = pow (rate, 0.5) * 10.0;\n  colorTex *= vec4 (1.0, 1.0, 1.0, opacityForRadius);\n  float rateOuter = 1.0 - rate;\n  rateOuter = pow (rateOuter, 4.0);\n  colorTex *= rateOuter * colorOuter + (1.0 - rateOuter) * colorInner;\n  colorTex *= v_color;\n  gl_FragColor = colorTex;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform vec4 colorInner;\nuniform vec4 colorOuter;\nvoid main () {\n  vec2 vecRel = v_uv0 - vec2 (0.5, 0.5);\n  float distance = sqrt (dot (vecRel, vecRel));\n  float rate = clamp (1.0 - (distance / 0.5), 0.0, 1.0);\n  vec4 colorTex = texture2D(texture, v_uv0);\n  float opacityForRadius = pow (rate, 0.5) * 10.0;\n  colorTex *= vec4 (1.0, 1.0, 1.0, opacityForRadius);\n  float rateOuter = 1.0 - rate;\n  rateOuter = pow (rateOuter, 4.0);\n  colorTex *= rateOuter * colorOuter + (1.0 - rateOuter) * colorInner;\n  colorTex *= v_color;\n  gl_FragColor = colorTex;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"eff_alchemy","binding":0,"members":[{"name":"colorInner","type":16,"count":1},{"name":"colorOuter","type":16,"count":1}],"defines":[]},{"name":"ALPHA_TEST","binding":1,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"eff_alchemy|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"colorInner":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}},"colorOuter":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}}}}]}]]],0,0,[],[],[]],[[[3,"lottery_view_bubble"],[4,"lottery_view_bubble",10,[-4,-5,-6],[[8,-3,-2]],[9,-1,0]],[5,"bg",false,1,[[10,0,-7,[0],1]],[0,"38XQuyHl9NHbaH928Gk/HB",1,0],[5,50,50]],[6,"scale",1,[0,"ddjTWbbspIaqsjKP8bj/Ta",1,0]],[7,"fusion",10,1,[[11,1,1,0,-8,[2],3]],[0,"d2GOv29DxCrqHn3mD8wdv/",1,0],[5,150,150]]],0,[0,3,1,0,4,3,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,0,2,0,0,4,0,5,1,8],[0,0,0,0],[-1,1,-1,1],[2,0,3,0]]]]