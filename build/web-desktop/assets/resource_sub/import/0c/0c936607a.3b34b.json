[1,["ccM+Z/cOlL7JO5eSi+OPQs"],["_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1]],[[0,0,1,2,4],[1,0,1,3]],[[[[0,"eff_cure_once",[{"hash":634163781,"record":null,"name":"eff_cure_once|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform eff_cure_loop {\n  float enabledTime;\n  float loopTime;\n  float borderSize;\n  float spr1PosX;\n  float spr1PosY;\n  float spr1Width;\n  float spr1Height;\n  float spr1Size;\n  float spr1OffsetLoop;\n  float spr1OffsetMS;\n  float spr2PosX;\n  float spr2PosY;\n  float spr2Width;\n  float spr2Height;\n  float spr2Size;\n  float spr2OffsetLoop;\n  float spr2OffsetMS;\n  float spr3PosX;\n  float spr3PosY;\n  float spr3Width;\n  float spr3Height;\n  float spr3Size;\n  float spr3OffsetLoop;\n  float spr3OffsetMS;\n};\nfloat sprColorRect (\n  vec2 p,\n  float posX,\n  float posY,\n  float width,\n  float height,\n  float loopOffset,\n  float rate\n)\n{\n  float distanceX = abs (p.x - posX) / width * 2.0;\n  float opacityX = step (distanceX, 1.0) * (1.0 - distanceX);\n  posY -= rate * loopOffset;\n  float distanceY = abs (p.y - posY) / height * 2.0;\n  float opacityY = step (distanceY, 1.0) * (1.0 - distanceY);\n  float inOut = 1.0 - abs(rate - 0.5) / 0.5;\n  return pow (min (opacityX, opacityY), 0.1) * inOut;\n}\nfloat spr (\n  vec2 p,\n  float posX,\n  float posY,\n  float width,\n  float height,\n  float size,\n  float loop,\n  float msOffset\n)\n{\n  msOffset += enabledTime;\n  float rate = msOffset / loopTime;\n  rate = clamp (rate, 0.0, 1.0);\n  float colorWidth = sprColorRect (\n      p,\n      posX,\n      posY,\n      width,\n      size,\n      loop,\n      rate\n  );\n  float colorHeight = sprColorRect (\n      p,\n      posX,\n      posY,\n      size,\n      height,\n      loop,\n      rate\n  );\n  return max (colorWidth, colorHeight);\n}\nvoid main () {\n  vec4 colorTex = texture (texture, v_uv0);\n  float colorSpr1Content = spr (\n      v_uv0,\n      spr1PosX,\n      spr1PosY,\n      spr1Width,\n      spr1Height,\n      spr1Size,\n      spr1OffsetLoop,\n      spr1OffsetMS\n  );\n  float colorSpr1Bg = spr (\n      v_uv0,\n      spr1PosX,\n      spr1PosY,\n      spr1Width + borderSize * 2.0,\n      spr1Height + borderSize * 2.0,\n      spr1Size + borderSize * 2.0,\n      spr1OffsetLoop,\n      spr1OffsetMS\n  );\n  float colorSpr2Content = spr (\n      v_uv0,\n      spr2PosX,\n      spr2PosY,\n      spr2Width,\n      spr2Height,\n      spr2Size,\n      spr2OffsetLoop,\n      spr2OffsetMS\n  );\n  float colorSpr2Bg = spr (\n      v_uv0,\n      spr2PosX,\n      spr2PosY,\n      spr2Width + borderSize * 2.0,\n      spr2Height + borderSize * 2.0,\n      spr2Size + borderSize * 2.0,\n      spr2OffsetLoop,\n      spr2OffsetMS\n  );\n  float colorSpr3Content = spr (\n      v_uv0,\n      spr3PosX,\n      spr3PosY,\n      spr3Width,\n      spr3Height,\n      spr3Size,\n      spr3OffsetLoop,\n      spr3OffsetMS\n  );\n  float colorSpr3Bg = spr (\n      v_uv0,\n      spr3PosX,\n      spr3PosY,\n      spr3Width + borderSize * 2.0,\n      spr3Height + borderSize * 2.0,\n      spr3Size + borderSize * 2.0,\n      spr3OffsetLoop,\n      spr3OffsetMS\n  );\n  float colorSprSumContent = colorSpr1Content + colorSpr2Content + colorSpr3Content;\n  float colorSprSumBg = (colorSpr1Bg + colorSpr2Bg + colorSpr3Bg) * 0.3;\n  float colorSpr = max (colorSprSumContent, colorSprSumBg);\n  float rate = clamp (enabledTime / loopTime, 0.0, 1.0);\n  rate = 1.0 - abs (rate - 0.5) / 0.5;\n  rate = pow (rate, 0.5);\n  colorTex.a *= colorSpr;\n  colorTex.a *= rate;\n  colorTex *= v_color;\n  gl_FragColor = colorTex.rgba;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float enabledTime;\nuniform float loopTime;\nuniform float borderSize;\nuniform float spr1PosX;\nuniform float spr1PosY;\nuniform float spr1Width;\nuniform float spr1Height;\nuniform float spr1Size;\nuniform float spr1OffsetLoop;\nuniform float spr1OffsetMS;\nuniform float spr2PosX;\nuniform float spr2PosY;\nuniform float spr2Width;\nuniform float spr2Height;\nuniform float spr2Size;\nuniform float spr2OffsetLoop;\nuniform float spr2OffsetMS;\nuniform float spr3PosX;\nuniform float spr3PosY;\nuniform float spr3Width;\nuniform float spr3Height;\nuniform float spr3Size;\nuniform float spr3OffsetLoop;\nuniform float spr3OffsetMS;\nfloat sprColorRect (\n  vec2 p,\n  float posX,\n  float posY,\n  float width,\n  float height,\n  float loopOffset,\n  float rate\n)\n{\n  float distanceX = abs (p.x - posX) / width * 2.0;\n  float opacityX = step (distanceX, 1.0) * (1.0 - distanceX);\n  posY -= rate * loopOffset;\n  float distanceY = abs (p.y - posY) / height * 2.0;\n  float opacityY = step (distanceY, 1.0) * (1.0 - distanceY);\n  float inOut = 1.0 - abs(rate - 0.5) / 0.5;\n  return pow (min (opacityX, opacityY), 0.1) * inOut;\n}\nfloat spr (\n  vec2 p,\n  float posX,\n  float posY,\n  float width,\n  float height,\n  float size,\n  float loop,\n  float msOffset\n)\n{\n  msOffset += enabledTime;\n  float rate = msOffset / loopTime;\n  rate = clamp (rate, 0.0, 1.0);\n  float colorWidth = sprColorRect (\n      p,\n      posX,\n      posY,\n      width,\n      size,\n      loop,\n      rate\n  );\n  float colorHeight = sprColorRect (\n      p,\n      posX,\n      posY,\n      size,\n      height,\n      loop,\n      rate\n  );\n  return max (colorWidth, colorHeight);\n}\nvoid main () {\n  vec4 colorTex = texture2D(texture, v_uv0);\n  float colorSpr1Content = spr (\n      v_uv0,\n      spr1PosX,\n      spr1PosY,\n      spr1Width,\n      spr1Height,\n      spr1Size,\n      spr1OffsetLoop,\n      spr1OffsetMS\n  );\n  float colorSpr1Bg = spr (\n      v_uv0,\n      spr1PosX,\n      spr1PosY,\n      spr1Width + borderSize * 2.0,\n      spr1Height + borderSize * 2.0,\n      spr1Size + borderSize * 2.0,\n      spr1OffsetLoop,\n      spr1OffsetMS\n  );\n  float colorSpr2Content = spr (\n      v_uv0,\n      spr2PosX,\n      spr2PosY,\n      spr2Width,\n      spr2Height,\n      spr2Size,\n      spr2OffsetLoop,\n      spr2OffsetMS\n  );\n  float colorSpr2Bg = spr (\n      v_uv0,\n      spr2PosX,\n      spr2PosY,\n      spr2Width + borderSize * 2.0,\n      spr2Height + borderSize * 2.0,\n      spr2Size + borderSize * 2.0,\n      spr2OffsetLoop,\n      spr2OffsetMS\n  );\n  float colorSpr3Content = spr (\n      v_uv0,\n      spr3PosX,\n      spr3PosY,\n      spr3Width,\n      spr3Height,\n      spr3Size,\n      spr3OffsetLoop,\n      spr3OffsetMS\n  );\n  float colorSpr3Bg = spr (\n      v_uv0,\n      spr3PosX,\n      spr3PosY,\n      spr3Width + borderSize * 2.0,\n      spr3Height + borderSize * 2.0,\n      spr3Size + borderSize * 2.0,\n      spr3OffsetLoop,\n      spr3OffsetMS\n  );\n  float colorSprSumContent = colorSpr1Content + colorSpr2Content + colorSpr3Content;\n  float colorSprSumBg = (colorSpr1Bg + colorSpr2Bg + colorSpr3Bg) * 0.3;\n  float colorSpr = max (colorSprSumContent, colorSprSumBg);\n  float rate = clamp (enabledTime / loopTime, 0.0, 1.0);\n  rate = 1.0 - abs (rate - 0.5) / 0.5;\n  rate = pow (rate, 0.5);\n  colorTex.a *= colorSpr;\n  colorTex.a *= rate;\n  colorTex *= v_color;\n  gl_FragColor = colorTex.rgba;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"eff_cure_loop","binding":1,"members":[{"name":"enabledTime","type":13,"count":1},{"name":"loopTime","type":13,"count":1},{"name":"borderSize","type":13,"count":1},{"name":"spr1PosX","type":13,"count":1},{"name":"spr1PosY","type":13,"count":1},{"name":"spr1Width","type":13,"count":1},{"name":"spr1Height","type":13,"count":1},{"name":"spr1Size","type":13,"count":1},{"name":"spr1OffsetLoop","type":13,"count":1},{"name":"spr1OffsetMS","type":13,"count":1},{"name":"spr2PosX","type":13,"count":1},{"name":"spr2PosY","type":13,"count":1},{"name":"spr2Width","type":13,"count":1},{"name":"spr2Height","type":13,"count":1},{"name":"spr2Size","type":13,"count":1},{"name":"spr2OffsetLoop","type":13,"count":1},{"name":"spr2OffsetMS","type":13,"count":1},{"name":"spr3PosX","type":13,"count":1},{"name":"spr3PosY","type":13,"count":1},{"name":"spr3Width","type":13,"count":1},{"name":"spr3Height","type":13,"count":1},{"name":"spr3Size","type":13,"count":1},{"name":"spr3OffsetLoop","type":13,"count":1},{"name":"spr3OffsetMS","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"eff_cure_once|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"enabledTime":{"type":13,"value":[500]},"loopTime":{"type":13,"value":[1000]},"alphaThreshold":{"type":13,"value":[0.5]},"borderSize":{"type":13,"value":[0]},"spr1PosX":{"type":13,"value":[0]},"spr1PosY":{"type":13,"value":[0]},"spr1Width":{"type":13,"value":[0]},"spr1Height":{"type":13,"value":[0]},"spr1Size":{"type":13,"value":[0]},"spr1OffsetLoop":{"type":13,"value":[0]},"spr1OffsetMS":{"type":13,"value":[0]},"spr2PosX":{"type":13,"value":[0]},"spr2PosY":{"type":13,"value":[0]},"spr2Width":{"type":13,"value":[0]},"spr2Height":{"type":13,"value":[0]},"spr2Size":{"type":13,"value":[0]},"spr2OffsetLoop":{"type":13,"value":[0]},"spr2OffsetMS":{"type":13,"value":[0]},"spr3PosX":{"type":13,"value":[0]},"spr3PosY":{"type":13,"value":[0]},"spr3Width":{"type":13,"value":[0]},"spr3Height":{"type":13,"value":[0]},"spr3Size":{"type":13,"value":[0]},"spr3OffsetLoop":{"type":13,"value":[0]},"spr3OffsetMS":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]],[[[1,"eff_cure_once_mat",{"0":{"defines":{},"props":{"enabledTime":0,"loopTime":1500,"spr1PosX":0.25,"spr1PosY":0.625,"spr1Width":0.25,"spr1Height":0.25,"spr1Size":0.1,"spr1OffsetLoop":0.25,"spr2PosX":0.75,"spr2PosY":0.875,"spr2Width":0.25,"spr2Height":0.25,"spr2Size":0.1,"spr2OffsetLoop":0.25,"spr2OffsetMS":500,"spr3PosX":0.5,"spr3PosY":0.375,"spr3Width":0.25,"spr3Height":0.25,"spr3Size":0.1,"spr3OffsetLoop":0.25,"spr3OffsetMS":1000}}}]],0,0,[0],[0],[0]]]]