[1,["64vllXN8ZBV4TrLNVPIbvQ"],["_effectAsset"],[["cc.Material",["_name","_techniqueData"],1],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,3],[1,0,1,2,4]],[[[[0,"eff_stick_mat",{"0":{"defines":{},"props":{"traceWidth":0.1}}}]],0,0,[0],[0],[0]],[[[1,"eff_stick",[{"hash":1023794125,"record":null,"name":"eff_stick|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform eff_stick {\n  float traceWidth;\n  float enabledTime;\n  float animMaxTime;\n};\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  float countPow = 0.25;\n  float borderTop = sin (v_uv0.x * 3.1415);\n  borderTop = pow (borderTop, countPow);\n  float opacityForShape = 0.0;\n  opacityForShape += step (v_uv0.x, traceWidth) * step (v_uv0.y, borderTop);\n  float middlePosX = (v_uv0.x - traceWidth) / (1.0 - 2.0 * traceWidth);\n  float middlePosY = sin (middlePosX * 3.1415);\n  middlePosY = pow (middlePosY, countPow);\n  middlePosY *= (1.0 - traceWidth);\n  opacityForShape += step (traceWidth, v_uv0.x) * step (v_uv0.x, 1.0 - traceWidth) * step (middlePosY, v_uv0.y) * step (v_uv0.y, borderTop);\n  opacityForShape += step (1.0 - traceWidth, v_uv0.x) * step (v_uv0.x, 1.0) * step (v_uv0.y, borderTop);\n  float opacityForTime = (animMaxTime - enabledTime) / animMaxTime;\n  float opacityForY = v_uv0.y;\n  opacityForY = pow (opacityForY, 4.0);\n  o.a *= opacityForShape;\n  o.a *= opacityForTime;\n  o.a *= opacityForY;\n  o *= v_color;\n  gl_FragColor = o.rgba;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float traceWidth;\nuniform float enabledTime;\nuniform float animMaxTime;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  float countPow = 0.25;\n  float borderTop = sin (v_uv0.x * 3.1415);\n  borderTop = pow (borderTop, countPow);\n  float opacityForShape = 0.0;\n  opacityForShape += step (v_uv0.x, traceWidth) * step (v_uv0.y, borderTop);\n  float middlePosX = (v_uv0.x - traceWidth) / (1.0 - 2.0 * traceWidth);\n  float middlePosY = sin (middlePosX * 3.1415);\n  middlePosY = pow (middlePosY, countPow);\n  middlePosY *= (1.0 - traceWidth);\n  opacityForShape += step (traceWidth, v_uv0.x) * step (v_uv0.x, 1.0 - traceWidth) * step (middlePosY, v_uv0.y) * step (v_uv0.y, borderTop);\n  opacityForShape += step (1.0 - traceWidth, v_uv0.x) * step (v_uv0.x, 1.0) * step (v_uv0.y, borderTop);\n  float opacityForTime = (animMaxTime - enabledTime) / animMaxTime;\n  float opacityForY = v_uv0.y;\n  opacityForY = pow (opacityForY, 4.0);\n  o.a *= opacityForShape;\n  o.a *= opacityForTime;\n  o.a *= opacityForY;\n  o *= v_color;\n  gl_FragColor = o.rgba;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":[]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"eff_stick","binding":1,"members":[{"name":"traceWidth","type":13,"count":1},{"name":"enabledTime","type":13,"count":1},{"name":"animMaxTime","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"eff_stick|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"traceWidth":{"type":13,"value":[0.2]},"enabledTime":{"type":13,"value":[0]},"animMaxTime":{"type":13,"value":[200]}}}]}]]],0,0,[],[],[]]]]