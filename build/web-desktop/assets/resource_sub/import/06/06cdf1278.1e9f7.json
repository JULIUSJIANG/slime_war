[1,["1f19N5PHhLkYZXhv5+3qw1","1bqeK6NXpJ0JJUyjK0KyCy","fb7l13w39NFouvNCEjr+++","13ytcQN/hHZavnSqLncHGB"],["node","_spriteFrame","_effectAsset","root","data"],[["cc.Node",["_name","_groupIndex","_active","_prefab","_components","_parent","_children","_contentSize","_color","_trs","_eulerAngles"],0,4,9,1,2,5,5,7,5],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.Material",["_name","_techniqueData"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Prefab",["_name"],2],["62919+1pQZM6o1/2EqNyjcG",["node","listNodeTint"],3,1,2],["cc.Sprite",["_sizeMode","node","_materials","_spriteFrame"],2,1,3,6]],[[1,0,1,2,2],[6,0,1,2,3,2],[2,0,1,3],[3,0,1,2,4],[4,0,2],[0,0,1,6,4,3,3],[0,0,1,5,6,3,3],[0,0,2,1,5,4,3,7,4],[0,0,1,5,4,3,8,7,9,10,3],[5,0,1,1],[1,1,2,1]],[[[[2,"eff_shield_bubble_round_mat",{"0":{"defines":{}}}]],0,0,[0],[2],[1]],[[[3,"eff_shield_bubble_round",[{"hash":2342295397,"record":null,"name":"eff_shield_bubble_round|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nvoid main () {\n  vec2 rel = v_uv0 - vec2 (0.5);\n  float distance = sqrt (dot (rel, rel));\n  float opacity = clamp (distance / 0.5, 0.0, 1.0);\n  opacity *= step (distance, 0.5);\n  opacity = pow (opacity, 2.0);\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  o.a *= opacity;\n  vec4 tint = vec4 (opacity) + (1.0 - opacity) * v_color;\n  o *= tint;\n  gl_FragColor = o.rgba;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nvoid main () {\n  vec2 rel = v_uv0 - vec2 (0.5);\n  float distance = sqrt (dot (rel, rel));\n  float opacity = clamp (distance / 0.5, 0.0, 1.0);\n  opacity *= step (distance, 0.5);\n  opacity = pow (opacity, 2.0);\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  o.a *= opacity;\n  vec4 tint = vec4 (opacity) + (1.0 - opacity) * v_color;\n  o *= tint;\n  gl_FragColor = o.rgba;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":[]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"eff_shield_bubble_round|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[4,"ch_5_2_scene_armo"],[5,"ch_5_2_scene_armo",1,[-5],[[9,-4,[-2,-3]]],[10,-1,0]],[6,"cont",1,1,[-6,-7],[0,"b9az0zBIVHV6JZQFwug5wr",1,0]],[7,"trace",false,2,2,[[1,0,-8,[0],1]],[0,"890WrHTBFMTZ69uVWLdbZ3",1,0],[5,25,25]],[8,"main",1,2,[[1,0,-9,[2],3]],[0,"68fkI0EalKuqrrHRqffoE7",1,0],[4,4293957375],[5,25,25],[0,0,0,0,0,-0.7071067811865475,0.7071067811865476,1,1,1],[1,0,0,-90]]],0,[0,3,1,0,-1,3,0,-2,4,0,0,1,0,-1,2,0,-1,3,0,-2,4,0,0,3,0,0,4,0,4,1,9],[0,0,0,0],[-1,1,-1,1],[2,0,3,0]]]]