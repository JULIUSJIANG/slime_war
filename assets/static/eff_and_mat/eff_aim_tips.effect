// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
          blendSrc: one
          blendDst: one_minus_src_alpha
          blendSrcAlpha: one
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  
  in vec4 a_color;
  out vec4 v_color;

  in float a_dist;
  out float v_dist;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * cc_matWorld * pos;

    v_color = a_color;
    v_dist = a_dist;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  #if CC_SUPPORT_standard_derivatives
    #extension GL_OES_standard_derivatives : enable
  #endif

  precision highp float;
  
  #include <cc-global>
  #include <alpha-test>

  in vec4 v_color;
  in float v_dist;

  void main () {
    vec4 o = v_color;
    o.r = pow (o.r, 0.5);
    o.g = pow (o.g, 0.5);
    o.b = pow (o.b, 0.5);
    o.rgb *= o.a;

    // // 周期
    // float circle = 2400.0;
    // float ms = mod (cc_time [0] * 1000.0, circle);
    // float x = 3.1415 * 2.0 * ms / circle;
    // float y = sin (x);
    // // 变化占比
    // float rateChange = 0.3;
    // o.rgb = o.rgb * (1.0 - rateChange) + o.rgb * rateChange * (y + 1.0);
    // ALPHA_TEST(o);
    // #if CC_SUPPORT_standard_derivatives
    //   float aa = fwidth(v_dist);
    // #else
    //   float aa = 0.05;
    // #endif
    // 
    // float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);
    // o *= alpha;
    
    gl_FragColor = o;
  }
}%
