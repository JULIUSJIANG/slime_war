{
  "ver": "1.0.27",
  "uuid": "b75384a0-be6a-4c9f-af4f-8e658266d02d",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform vec4 cc_time;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float split;\nuniform float circle;\nvoid main () {\n  vec4 data = texture2D(texture, v_uv0);\n  float angle = data[2];\n  vec4 finalColor = vec4(1.0, 1.0, 1.0, 1.0);\n  finalColor[3] *= abs(mod(angle + cc_time[0] / circle, (1.0 / split)) / (1.0 / split) - 0.5);\n  finalColor[3] *= data[3];\n  finalColor *= v_color;\n  gl_FragColor = finalColor;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform Sunshine {\n  float split;\n  float circle;\n};\nvoid main () {\n  vec4 data = texture(texture, v_uv0);\n  float angle = data[2];\n  vec4 finalColor = vec4(1.0, 1.0, 1.0, 1.0);\n  finalColor[3] *= abs(mod(angle + cc_time[0] / circle, (1.0 / split)) / (1.0 / split) - 0.5);\n  finalColor[3] *= data[3];\n  finalColor *= v_color;\n  gl_FragColor = finalColor;\n}"
      }
    }
  ],
  "subMetas": {}
}