// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
  #include <texture>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;

  #define PI 3.1415

  float atan2 (float y, float x) {
    return atan (y / x) + step (x, 0.0) * step (0.0, y) * PI - step (x, 0.0) * step (y, 0.0) * PI;
  }

  void main () {
    vec2 rel = v_uv0 - vec2 (0.5);
    float opacityAngle = abs (atan2 (rel.y, rel.x)) / PI;
    opacityAngle = pow (opacityAngle, 1.0);

    float distance = sqrt (dot (rel, rel));
    float opacity = clamp (distance / 0.5, 0.0, 1.0);
    opacity *= opacityAngle;
    opacity *= step (distance, 0.5);
    opacity = pow (opacity, 2.0);

    // opacity *= 4.0;

    vec4 o = vec4(1, 1, 1, 1);
    CCTexture(texture, v_uv0, o);
    o.a *= opacity;

    vec4 tint = vec4 (opacity) + (1.0 - opacity) * v_color;

    o *= tint;
    gl_FragColor = o.rgba;
  }
}%
