// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        border0: {value: 0}
        border0Color: {value: [0, 0]}

        border1: {value: 0}
        border1Color: {value: [0, 0]}

        border2: {value: 1.0}
        border2Color: {value: [1.0, 1.0]}

        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color; 
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1); 
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  } 
}%


CCProgram fs %{ 
  precision highp float;

  #include <alpha-test>
  #include <texture>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;

  uniform eff_altar_color_step3 {
    vec2 border0Color;
    vec2 border1Color;
    vec2 border2Color;
    float border0;
    float border1;
    float border2;
  };

  // 全黑的阈值
  const float DARK = 0.05;

  void main () {
    vec3 colorLight = vec3 (0.75, 0.44, 0.62);
    vec3 colorDark = vec3 (0.24, 0.33, 0.58);
    vec4 colorTex = texture (texture, v_uv0);
    float colorTexAvg = (colorTex.r + colorTex.g + colorTex.b) / 3.0;
    vec3 colorDisplay = vec3 (0, 0, 0) * step (colorTexAvg, DARK)
        + (colorDark * (1.0 - border0Color[0]) + colorLight * border0Color [0]) * border0Color[1] * step (DARK, colorTexAvg) * step (colorTexAvg, border0)
        + (colorDark * (1.0 - border1Color[0]) + colorLight * border1Color [0]) * border1Color[1] * step (border0, colorTexAvg) * step (colorTexAvg, border1)
        + (colorDark * (1.0 - border2Color[0]) + colorLight * border2Color [0]) * border2Color[1] * step (border1, colorTexAvg) * step (colorTexAvg, border2);
    gl_FragColor = vec4 (colorDisplay.r, colorDisplay.g, colorDisplay.b, colorTex.a) * v_color;
  }
}%
