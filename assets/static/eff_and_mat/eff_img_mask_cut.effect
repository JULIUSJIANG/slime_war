// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }

        textureWidth: { value: 1.0 }
        textureHeight: { value: 1.0 }

        cutX: {value: 0.0}
        cutY: {value: 0.0}
        cutWidth: {value: 1.0}
        cutHeight: {value: 1.0}
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  uniform eff_img_mask_cut {
    // 源纹理宽度
    float textureWidth;
    // 源纹理高度
    float textureHeight;

    // 裁切位置 x
    float cutX;
    // 裁切位置 y
    float cutY;
    // 裁切宽度 
    float cutWidth;
    // 裁切高度
    float cutHeight;
  };

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;
  out vec2 v_uv1;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = vec2 ((cutX + a_uv0.x * cutWidth) / textureWidth, (cutY + a_uv0.y * cutHeight) / textureHeight);
    v_uv1 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%

CCProgram fs %{
  precision highp float; 

  #include <alpha-test>
  #include <texture>

  uniform eff_img_mask_cut {
    // 源纹理宽度
    float textureWidth;
    // 源纹理高度
    float textureHeight;

    // 裁切位置 x
    float cutX;
    // 裁切位置 y
    float cutY;
    // 裁切宽度  
    float cutWidth;
    // 裁切高度
    float cutHeight;
  };

  in vec4 v_color;
  in vec2 v_uv0;
  in vec2 v_uv1;
  uniform sampler2D texture;

  void main () {
    float cutSize = 6.0;
    float xGrid = cutSize;
    if (v_uv1.x < cutSize / cutWidth) {
        xGrid = v_uv1.x * cutWidth;
    };
    if (1.0 - cutSize / cutWidth < v_uv1.x) {
        xGrid = (1.0 - v_uv1.x) * cutWidth;
    };
    float yGrid = cutSize;
    if (v_uv1.y < cutSize / cutHeight) {
        yGrid = v_uv1.y * cutHeight;
    };
    if (1.0 - cutSize / cutHeight < v_uv1.y) {
        yGrid = (1.0 - v_uv1.y) * cutHeight;
    };
    if (xGrid + yGrid < cutSize) {
        gl_FragColor = vec4 (0, 0, 0, 0);
    }
    else {
        vec4 o = vec4 (1, 1, 1, 1);
        CCTexture (texture, v_uv0, o);
        o *= v_color;
        gl_FragColor = o.rgba;
    };
  }
}%
