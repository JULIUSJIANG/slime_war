// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }

        tintStar: { value: 0.25 }
        tintStarColor: {value: [1.0, 0.0, 0.0, 1.0], editor: {type: color}}

        tintEnd: { value: 0.75 }
        tintEndColor: {value: [0.0, 1.0, 0.0, 1.0], editor: {type: color}}

}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
  #include <texture> 

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;

  uniform eff_txt_tint_top_to_bottom {
    vec4 tintStarColor;
    vec4 tintEndColor;
    float tintStar;
    float tintEnd;
  };

  void main () {
    vec4 colorTint = vec4 (0.0, 0.0, 0.0, 0.0);
    colorTint += step (v_uv0.y, tintStar) * tintStarColor;
    float rate = (v_uv0.y - tintStar) / (tintEnd - tintStar);
    colorTint += step (tintStar, v_uv0.y) * step (v_uv0.y, tintEnd) * ((1.0 - rate) * tintStarColor + rate * tintEndColor);
    colorTint += step (tintEnd, v_uv0.y) * tintEndColor;

    vec4 o = vec4(1, 1, 1, 1);
    CCTexture(texture, v_uv0, o);
    o *= colorTint;
    o *= v_color;
    gl_FragColor = o.rgba;
  }
}%
