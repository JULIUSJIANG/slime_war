{
  "ver": "1.0.27",
  "uuid": "4ef74018-8118-4d4a-bf87-14e634bfffcf",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nuniform mat4 cc_matWorldIT;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvarying vec4 v_dirX;\nvarying vec4 v_dirY;\nvarying vec4 v_dirZ;\nvarying vec4 v_o;\nvarying vec3 v_rel;\nvarying vec3 v_shadow;\nvarying vec3 v_pos;\nvarying vec4 v_white;\nvoid main () {\n  vec4 dirX = cc_matWorld * vec4(1, 0, 0, 1);\n  vec4 dirY = cc_matWorld * vec4(0, 1, 0, 1);\n  vec4 dirZ = cc_matWorld * vec4(0, 0, 1, 1);\n  vec4 o = cc_matWorld * vec4(0, 0, 0, 1);\n  vec3 rel = a_position - o.xyz;\n  vec3 shadow = vec3(\n    dot(dirX.xyz, rel),\n    dot(dirY.xyz, rel),\n    dot(dirZ.xyz, rel)\n  );\n  vec4 pos = vec4(shadow + o.xyz, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n  v_dirX = dirX;\n  v_dirY = dirY;\n  v_dirZ = dirZ;\n  v_o = o;\n  v_rel = rel;\n  v_shadow = shadow;\n  v_pos = a_position;\n  v_white = cc_matWorldIT * vec4(1, 1, 1, 1);\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nvarying vec4 v_dirX;\nvarying vec4 v_dirY;\nvarying vec4 v_dirZ;\nvarying vec4 v_o;\nvarying vec3 v_rel;\nvarying vec3 v_shadow;\nvarying vec3 v_pos;\nvarying vec4 v_white;\nvoid main () {\n  vec4 colorMain = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    colorMain.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    colorMain.a *= texture_tmp.a;\n  #else\n    colorMain *= texture_tmp;\n  #endif\n  colorMain *= v_color;\n  gl_FragColor = v_white;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nout vec4 v_dirX;\nout vec4 v_dirY;\nout vec4 v_dirZ;\nout vec4 v_o;\nout vec3 v_rel;\nout vec3 v_shadow;\nout vec3 v_pos;\nout vec4 v_white;\nvoid main () {\n  vec4 dirX = cc_matWorld * vec4(1, 0, 0, 1);\n  vec4 dirY = cc_matWorld * vec4(0, 1, 0, 1);\n  vec4 dirZ = cc_matWorld * vec4(0, 0, 1, 1);\n  vec4 o = cc_matWorld * vec4(0, 0, 0, 1);\n  vec3 rel = a_position - o.xyz;\n  vec3 shadow = vec3(\n    dot(dirX.xyz, rel),\n    dot(dirY.xyz, rel),\n    dot(dirZ.xyz, rel)\n  );\n  vec4 pos = vec4(shadow + o.xyz, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n  v_dirX = dirX;\n  v_dirY = dirY;\n  v_dirZ = dirZ;\n  v_o = o;\n  v_rel = rel;\n  v_shadow = shadow;\n  v_pos = a_position;\n  v_white = cc_matWorldIT * vec4(1, 1, 1, 1);\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nin vec4 v_dirX;\nin vec4 v_dirY;\nin vec4 v_dirZ;\nin vec4 v_o;\nin vec3 v_rel;\nin vec3 v_shadow;\nin vec3 v_pos;\nin vec4 v_white;\nvoid main () {\n  vec4 colorMain = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    colorMain.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    colorMain.a *= texture_tmp.a;\n  #else\n    colorMain *= texture_tmp;\n  #endif\n  colorMain *= v_color;\n  gl_FragColor = v_white;\n}"
      }
    }
  ],
  "subMetas": {}
}