{
  "ver": "1.0.27",
  "uuid": "94390fad-27ed-4143-929d-82f2a3247ad5",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D textureMask;\nuniform float texWidth;\nuniform float texHeight;\nuniform float cutX;\nuniform float cutY;\nuniform float width;\nuniform float height;\nvoid main () {\n  vec2 posForTint = vec2 (\n      (cutX + width * v_uv0.x) / texWidth,\n      (cutY + height * v_uv0.y) / texHeight\n  );\n  vec4 colorTex = texture2D(texture, posForTint);\n  vec4 colorMask = texture2D(textureMask, v_uv0);\n  gl_FragColor = colorTex * colorMask * v_color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nuniform eff_img_tint {\n  float texWidth;\n  float texHeight;\n  float cutX;\n  float cutY;\n  float width;\n  float height;\n};\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D textureMask;\nuniform eff_img_tint {\n  float texWidth;\n  float texHeight;\n  float cutX;\n  float cutY;\n  float width;\n  float height;\n};\nvoid main () {\n  vec2 posForTint = vec2 (\n      (cutX + width * v_uv0.x) / texWidth,\n      (cutY + height * v_uv0.y) / texHeight\n  );\n  vec4 colorTex = texture (texture, posForTint);\n  vec4 colorMask = texture (textureMask, v_uv0);\n  gl_FragColor = colorTex * colorMask * v_color;\n}"
      }
    }
  ],
  "subMetas": {}
}