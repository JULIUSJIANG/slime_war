// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        textureScreenshot1: { value: white }
        textureScreenshot2: { value: white }
        textureScreenshot3: { value: white }
        textureScreenshot4: { value: white }
        textureScreenshot5: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
  #include <texture>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform sampler2D textureScreenshot1;
  uniform sampler2D textureScreenshot2;
  uniform sampler2D textureScreenshot3;
  uniform sampler2D textureScreenshot4;
  uniform sampler2D textureScreenshot5;

  vec3 jodieReinhardTonemap(vec3 c){
      float l = dot(c, vec3(0.2126, 0.7152, 0.0722));
      vec3 tc = c / (c + 1.0);
      return mix(c / (l + 1.0), tc, tc);
  }

  void main () {
    vec4 colorTex = texture (texture, v_uv0);
    vec2 pos = vec2 (v_uv0.x, 1.0 - v_uv0.y);
    vec4 colorScreenshot1 = texture (textureScreenshot1, pos);
    colorScreenshot1.a = 1.0;
    vec4 colorScreenshot2 = texture (textureScreenshot2, pos);
    colorScreenshot2.a = 1.0;
    vec4 colorScreenshot3 = texture (textureScreenshot3, pos);
    colorScreenshot3.a = 1.0;
    vec4 colorScreenshot4 = texture (textureScreenshot4, pos);
    colorScreenshot4.a = 1.0;
    vec4 colorScreenshot5 = texture (textureScreenshot5, pos);
    colorScreenshot5.a = 1.0;

    vec4 tint = vec4 (0);
    tint += pow (colorScreenshot1, vec4 (2.2));
    tint += pow (colorScreenshot2, vec4 (2.2)) * 1.3;
    tint += pow (colorScreenshot3, vec4 (2.2)) * 1.6;
    tint += pow (colorScreenshot4, vec4 (2.2)) * 1.9;
    tint += pow (colorScreenshot5, vec4 (2.2)) * 2.2;
    tint.rgb = jodieReinhardTonemap (tint.rgb);

    gl_FragColor = colorTex * tint * v_color;
  }
}%
