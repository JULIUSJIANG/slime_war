{
  "ver": "1.0.27",
  "uuid": "4de0945e-eaf8-4165-b794-a6d4e6634fb6",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D textureScreenshot1;\nuniform sampler2D textureScreenshot2;\nuniform sampler2D textureScreenshot3;\nuniform sampler2D textureScreenshot4;\nuniform sampler2D textureScreenshot5;\nvec3 jodieReinhardTonemap(vec3 c){\n    float l = dot(c, vec3(0.2126, 0.7152, 0.0722));\n    vec3 tc = c / (c + 1.0);\n    return mix(c / (l + 1.0), tc, tc);\n}\nvoid main () {\n  vec4 colorTex = texture2D(texture, v_uv0);\n  vec2 pos = vec2 (v_uv0.x, 1.0 - v_uv0.y);\n  vec4 colorScreenshot1 = texture2D(textureScreenshot1, pos);\n  colorScreenshot1.a = 1.0;\n  vec4 colorScreenshot2 = texture2D(textureScreenshot2, pos);\n  colorScreenshot2.a = 1.0;\n  vec4 colorScreenshot3 = texture2D(textureScreenshot3, pos);\n  colorScreenshot3.a = 1.0;\n  vec4 colorScreenshot4 = texture2D(textureScreenshot4, pos);\n  colorScreenshot4.a = 1.0;\n  vec4 colorScreenshot5 = texture2D(textureScreenshot5, pos);\n  colorScreenshot5.a = 1.0;\n  vec4 tint = vec4 (0);\n  tint += pow (colorScreenshot1, vec4 (2.2));\n  tint += pow (colorScreenshot2, vec4 (2.2)) * 1.3;\n  tint += pow (colorScreenshot3, vec4 (2.2)) * 1.6;\n  tint += pow (colorScreenshot4, vec4 (2.2)) * 1.9;\n  tint += pow (colorScreenshot5, vec4 (2.2)) * 2.2;\n  tint.rgb = jodieReinhardTonemap (tint.rgb);\n  gl_FragColor = colorTex * tint * v_color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D textureScreenshot1;\nuniform sampler2D textureScreenshot2;\nuniform sampler2D textureScreenshot3;\nuniform sampler2D textureScreenshot4;\nuniform sampler2D textureScreenshot5;\nvec3 jodieReinhardTonemap(vec3 c){\n    float l = dot(c, vec3(0.2126, 0.7152, 0.0722));\n    vec3 tc = c / (c + 1.0);\n    return mix(c / (l + 1.0), tc, tc);\n}\nvoid main () {\n  vec4 colorTex = texture (texture, v_uv0);\n  vec2 pos = vec2 (v_uv0.x, 1.0 - v_uv0.y);\n  vec4 colorScreenshot1 = texture (textureScreenshot1, pos);\n  colorScreenshot1.a = 1.0;\n  vec4 colorScreenshot2 = texture (textureScreenshot2, pos);\n  colorScreenshot2.a = 1.0;\n  vec4 colorScreenshot3 = texture (textureScreenshot3, pos);\n  colorScreenshot3.a = 1.0;\n  vec4 colorScreenshot4 = texture (textureScreenshot4, pos);\n  colorScreenshot4.a = 1.0;\n  vec4 colorScreenshot5 = texture (textureScreenshot5, pos);\n  colorScreenshot5.a = 1.0;\n  vec4 tint = vec4 (0);\n  tint += pow (colorScreenshot1, vec4 (2.2));\n  tint += pow (colorScreenshot2, vec4 (2.2)) * 1.3;\n  tint += pow (colorScreenshot3, vec4 (2.2)) * 1.6;\n  tint += pow (colorScreenshot4, vec4 (2.2)) * 1.9;\n  tint += pow (colorScreenshot5, vec4 (2.2)) * 2.2;\n  tint.rgb = jodieReinhardTonemap (tint.rgb);\n  gl_FragColor = colorTex * tint * v_color;\n}"
      }
    }
  ],
  "subMetas": {}
}