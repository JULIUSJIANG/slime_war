{
  "ver": "1.0.27",
  "uuid": "97c4cdab-c7a3-46c6-b08e-99a59ae80529",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform vec4 cc_time;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float ctxWidth;\nuniform float circle;\nuniform float scale;\nuniform float lenBase;\nvoid main () {\n  float ms = mod (cc_time [0] * 1000.0, circle);\n  float y = sin (2.0 * 3.1415 * mod (v_uv0 [0] * ctxWidth + ms / circle * lenBase, lenBase) / lenBase);\n  vec2 pos = v_uv0 + vec2 (0.0, y * scale);\n  vec4 colorTex = texture2D(texture, pos);\n  gl_FragColor = colorTex * v_color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform eff_float_up_down {\n  float ctxWidth;\n  float ctxHeight;\n  float circle;\n  float scale;\n  float lenBase;\n};\nvoid main () {\n  float ms = mod (cc_time [0] * 1000.0, circle);\n  float y = sin (2.0 * 3.1415 * mod (v_uv0 [0] * ctxWidth + ms / circle * lenBase, lenBase) / lenBase);\n  vec2 pos = v_uv0 + vec2 (0.0, y * scale);\n  vec4 colorTex = texture (texture, pos);\n  gl_FragColor = colorTex * v_color;\n}"
      }
    }
  ],
  "subMetas": {}
}