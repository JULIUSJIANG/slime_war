{
  "ver": "1.0.27",
  "uuid": "b0525bc7-6e9b-4774-adb5-0b1a7662306c",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float scaleTop;\nuniform float scaleBottom;\nuniform float lenBottom;\nuniform float enabledTime;\nuniform float animMaxTime;\nuniform float transformY;\nvoid main () {\n  float rateTime = enabledTime / animMaxTime;\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  float yRateTop = sin (v_uv0.x * 3.1415);\n  yRateTop = pow (yRateTop, 0.25);\n  float borderTop = yRateTop * scaleTop;\n  borderTop = v_uv0.x * transformY + (1.0 - v_uv0.x * transformY) * borderTop;\n  float bottomXOffset = lenBottom - 1.0;\n  float yRateBottom = sin ((v_uv0.x + bottomXOffset * rateTime) / lenBottom * 3.1415);\n  yRateBottom = pow (yRateBottom, 0.25);\n  float borderBottom = yRateBottom * scaleBottom;\n  borderBottom += (borderTop - borderBottom) * pow (rateTime, 1.0);\n  borderBottom = v_uv0.x * transformY + (1.0 - v_uv0.x * transformY) * borderBottom;\n  float rateY = (v_uv0.y - borderBottom) / (borderTop - borderBottom);\n  rateY = pow (rateY, 1.5);\n  rateY *= step (borderBottom, v_uv0.y) * step (v_uv0.y, borderTop);\n  float rateX = 1.0;\n  o.a *= rateX;\n  o.a *= rateY;\n  o *= v_color;\n  gl_FragColor = o.rgba;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform eff_protuberant_squr {\n  float scaleTop;\n  float scaleBottom;\n  float lenBottom;\n  float enabledTime;\n  float animMaxTime;\n  float transformY;\n};\nvoid main () {\n  float rateTime = enabledTime / animMaxTime;\n  vec4 o = vec4(1, 1, 1, 1);\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  float yRateTop = sin (v_uv0.x * 3.1415);\n  yRateTop = pow (yRateTop, 0.25);\n  float borderTop = yRateTop * scaleTop;\n  borderTop = v_uv0.x * transformY + (1.0 - v_uv0.x * transformY) * borderTop;\n  float bottomXOffset = lenBottom - 1.0;\n  float yRateBottom = sin ((v_uv0.x + bottomXOffset * rateTime) / lenBottom * 3.1415);\n  yRateBottom = pow (yRateBottom, 0.25);\n  float borderBottom = yRateBottom * scaleBottom;\n  borderBottom += (borderTop - borderBottom) * pow (rateTime, 1.0);\n  borderBottom = v_uv0.x * transformY + (1.0 - v_uv0.x * transformY) * borderBottom;\n  float rateY = (v_uv0.y - borderBottom) / (borderTop - borderBottom);\n  rateY = pow (rateY, 1.5);\n  rateY *= step (borderBottom, v_uv0.y) * step (v_uv0.y, borderTop);\n  float rateX = 1.0;\n  o.a *= rateX;\n  o.a *= rateY;\n  o *= v_color;\n  gl_FragColor = o.rgba;\n}"
      }
    }
  ],
  "subMetas": {}
}