// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

/*
效果：平滑
注意事项：由于性能问题，降级回最原始的着色
*/

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        textureWidth: { value: 1.0 }
        textureHeight: { value: 1.0 }
        alphaThreshold: { value: 0.5 }

        additionTintR: { 0.0 }
        additionTintG: { 0.0 }
        additionTintB: { 0.0 }
        additionTintA: { 0.0 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
  #include <texture>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;

  // 接收外部变量
  uniform EffSmoothPro {
    // 宽度
    float textureWidth;
    // 高度
    float textureHeight;

    // 附加着色 - 红 
    float additionTintR;
    // 附加着色 - 绿
    float additionTintG;
    // 附加着色 - 蓝
    float additionTintB;
    // 附加着色 - 不透明度
    float additionTintA;
  };

  void main () {
    vec4 colorTex = texture2D (texture, v_uv0);
    colorTex.rgb += (vec3 (1) - colorTex.rgb) * vec3 (additionTintR, additionTintG, additionTintB) * additionTintA;
    gl_FragColor = colorTex * v_color;
  }

}%