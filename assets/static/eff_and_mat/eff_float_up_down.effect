// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        ctxWidth: {value: 100.0}
        ctxHeight: {value: 100.0}
        circle: {value: 1000.0}
        scale: {value: 1.0}
        lenBase: {value: 10.0}
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    v_uv0 = a_uv0;
    v_color = a_color;
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <cc-global>
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;

  uniform eff_float_up_down {
    float ctxWidth;
    float ctxHeight;
    float circle;
    float scale;
    float lenBase;
  };

  void main () {
    float ms = mod (cc_time [0] * 1000.0, circle);
    float y = sin (2.0 * 3.1415 * mod (v_uv0 [0] * ctxWidth + ms / circle * lenBase, lenBase) / lenBase);
    vec2 pos = v_uv0 + vec2 (0.0, y * scale);

    vec4 colorTex = texture (texture, pos);
    gl_FragColor = colorTex * v_color;
  }
}%
